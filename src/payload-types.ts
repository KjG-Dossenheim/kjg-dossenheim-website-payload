/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    jahresplan: Jahresplan;
    blogPosts: BlogPost;
    blogCategory: BlogCategory;
    team: Team;
    teambilder: Teambilder;
    media: Media;
    knallbonbonRegistration: KnallbonbonRegistration;
    knallbonbonEvents: KnallbonbonEvent;
    membershipApplication: MembershipApplication;
    users: User;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    blogCategory: {
      relatedPosts: 'blogPosts';
    };
  };
  collectionsSelect: {
    jahresplan: JahresplanSelect<false> | JahresplanSelect<true>;
    blogPosts: BlogPostsSelect<false> | BlogPostsSelect<true>;
    blogCategory: BlogCategorySelect<false> | BlogCategorySelect<true>;
    team: TeamSelect<false> | TeamSelect<true>;
    teambilder: TeambilderSelect<false> | TeambilderSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    knallbonbonRegistration: KnallbonbonRegistrationSelect<false> | KnallbonbonRegistrationSelect<true>;
    knallbonbonEvents: KnallbonbonEventsSelect<false> | KnallbonbonEventsSelect<true>;
    membershipApplication: MembershipApplicationSelect<false> | MembershipApplicationSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    startseite: Startseite;
    adventsmarkt: Adventsmarkt;
    martinsumzug: Martinsumzug;
    sommerfreizeit: Sommerfreizeit;
    tannenbaumaktion: Tannenbaumaktion;
    about: About;
    header: Header;
    footer: Footer;
    rechtliches: Rechtlich;
    knallbonbon: Knallbonbon;
  };
  globalsSelect: {
    startseite: StartseiteSelect<false> | StartseiteSelect<true>;
    adventsmarkt: AdventsmarktSelect<false> | AdventsmarktSelect<true>;
    martinsumzug: MartinsumzugSelect<false> | MartinsumzugSelect<true>;
    sommerfreizeit: SommerfreizeitSelect<false> | SommerfreizeitSelect<true>;
    tannenbaumaktion: TannenbaumaktionSelect<false> | TannenbaumaktionSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    rechtliches: RechtlichesSelect<false> | RechtlichesSelect<true>;
    knallbonbon: KnallbonbonSelect<false> | KnallbonbonSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jahresplan".
 */
export interface Jahresplan {
  id: string;
  name: string;
  title: string;
  startDate: string;
  endDate?: string | null;
  description?: string | null;
  location?: string | null;
  link?: string | null;
  url?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPosts".
 */
export interface BlogPost {
  id: string;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  publishedAt?: string | null;
  author: string | User;
  slug?: string | null;
  slugLock?: boolean | null;
  category: (string | BlogCategory)[];
  relatedPosts?: (string | BlogPost)[] | null;
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  teamer?: (string | null) | Team;
  sub?: string | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team".
 */
export interface Team {
  id: string;
  firstName: string;
  lastName: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  profilePicture?: (string | null) | Teambilder;
  email?: string | null;
  phone?: string | null;
  position: ('vorstand' | 'teamer' | 'helfer' | 'ehemalige')[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teambilder".
 */
export interface Teambilder {
  id: string;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCategory".
 */
export interface BlogCategory {
  id: string;
  title: string;
  relatedPosts?: {
    docs?: (string | BlogPost)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knallbonbonRegistration".
 */
export interface KnallbonbonRegistration {
  id: string;
  firstNameParent: string;
  lastNameParent: string;
  firstNameChild: string;
  lastNameChild: string;
  email: string;
  phone?: string | null;
  address?: string | null;
  photoConsent: boolean;
  event: string | KnallbonbonEvent;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knallbonbonEvents".
 */
export interface KnallbonbonEvent {
  id: string;
  title: string;
  date: string;
  location: string;
  /**
   * Weitere Details zum Termin, z.B. Treffpunkt oder besondere Hinweise.
   */
  additionalInfo?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membershipApplication".
 */
export interface MembershipApplication {
  id: string;
  firstName: string;
  lastName: string;
  name?: string | null;
  birthDate: string;
  address: string;
  city: string;
  postalCode: string;
  email: string;
  phone?: string | null;
  status: 'new' | 'in_review' | 'completed' | 'rejected';
  notes?: string | null;
  consentToDataProcessing: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'jahresplan';
        value: string | Jahresplan;
      } | null)
    | ({
        relationTo: 'blogPosts';
        value: string | BlogPost;
      } | null)
    | ({
        relationTo: 'blogCategory';
        value: string | BlogCategory;
      } | null)
    | ({
        relationTo: 'team';
        value: string | Team;
      } | null)
    | ({
        relationTo: 'teambilder';
        value: string | Teambilder;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'knallbonbonRegistration';
        value: string | KnallbonbonRegistration;
      } | null)
    | ({
        relationTo: 'knallbonbonEvents';
        value: string | KnallbonbonEvent;
      } | null)
    | ({
        relationTo: 'membershipApplication';
        value: string | MembershipApplication;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jahresplan_select".
 */
export interface JahresplanSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  startDate?: T;
  endDate?: T;
  description?: T;
  location?: T;
  link?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPosts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  publishedAt?: T;
  author?: T;
  slug?: T;
  slugLock?: T;
  category?: T;
  relatedPosts?: T;
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCategory_select".
 */
export interface BlogCategorySelect<T extends boolean = true> {
  title?: T;
  relatedPosts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team_select".
 */
export interface TeamSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  description?: T;
  profilePicture?: T;
  email?: T;
  phone?: T;
  position?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teambilder_select".
 */
export interface TeambilderSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knallbonbonRegistration_select".
 */
export interface KnallbonbonRegistrationSelect<T extends boolean = true> {
  firstNameParent?: T;
  lastNameParent?: T;
  firstNameChild?: T;
  lastNameChild?: T;
  email?: T;
  phone?: T;
  address?: T;
  photoConsent?: T;
  event?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knallbonbonEvents_select".
 */
export interface KnallbonbonEventsSelect<T extends boolean = true> {
  title?: T;
  date?: T;
  location?: T;
  additionalInfo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membershipApplication_select".
 */
export interface MembershipApplicationSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  name?: T;
  birthDate?: T;
  address?: T;
  city?: T;
  postalCode?: T;
  email?: T;
  phone?: T;
  status?: T;
  notes?: T;
  consentToDataProcessing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  teamer?: T;
  sub?: T;
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "startseite".
 */
export interface Startseite {
  id: string;
  neuigkeiten: {
    title: string;
    link: string;
    enabled?: boolean | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "adventsmarkt".
 */
export interface Adventsmarkt {
  id: string;
  startDate: string;
  endDate: string;
  /**
   * Meta-Daten für SEO
   */
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "martinsumzug".
 */
export interface Martinsumzug {
  id: string;
  startDate: string;
  /**
   * Meta-Daten für SEO
   */
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sommerfreizeit".
 */
export interface Sommerfreizeit {
  id: string;
  title: string;
  motto?: string | null;
  startDate: string;
  endDate: string;
  alter: string;
  anmeldungWebsite: string;
  allgemein: {
    pricing: {
      name: string;
      beschreibung: string;
      price: number;
      eigenschaften: {
        name: string;
        id?: string | null;
      }[];
      id?: string | null;
    }[];
    eigenschaften: {
      title: string;
      description?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      id?: string | null;
    }[];
    teamFreizeit: (string | Team)[];
  };
  unterkunft: {
    name: string;
    beschreibung: string;
    website: string;
    bild: string | Media;
  };
  packliste: {
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  informationen: {
    eintrag: {
      title?: string | null;
      text?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      links?:
        | {
            linkText?: string | null;
            link?: string | null;
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[];
  };
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tannenbaumaktion".
 */
export interface Tannenbaumaktion {
  id: string;
  startDate: string;
  /**
   * Meta-Daten für SEO
   */
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  vekaufsort: {
    name: string;
    adresse: string;
    id?: string | null;
  }[];
  fragen: {
    frage: string;
    answer: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navigation: {
    title: string;
    url: string;
    subNavigation?:
      | {
          label: string;
          title: string;
          link: string;
          url: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  aktionen: {
    /**
     * Name des Icons von https://lucide.dev/icons (z.B. "Calendar" für das Kalender-Icon)
     */
    icon: string;
    title: string;
    url: string;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  socialLinks: {
    title: string;
    url: string;
    icon: 'SiFacebook' | 'SiInstagram' | 'SiWhatsapp';
    id?: string | null;
  }[];
  legalLinks: {
    title: string;
    url: string;
    id?: string | null;
  }[];
  email: string;
  phone: string;
  whatsapp: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rechtliches".
 */
export interface Rechtlich {
  id: string;
  impressum: {
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  datenschutz: {
    allgemein: {
      text: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
    };
    sommerfreizeit: {
      text: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
    };
  };
  agb: {
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knallbonbon".
 */
export interface Knallbonbon {
  id: string;
  title: string;
  /**
   * Kurze Beschreibung, die auf der Website angezeigt wird.
   */
  description: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "startseite_select".
 */
export interface StartseiteSelect<T extends boolean = true> {
  neuigkeiten?:
    | T
    | {
        title?: T;
        link?: T;
        enabled?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "adventsmarkt_select".
 */
export interface AdventsmarktSelect<T extends boolean = true> {
  startDate?: T;
  endDate?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "martinsumzug_select".
 */
export interface MartinsumzugSelect<T extends boolean = true> {
  startDate?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sommerfreizeit_select".
 */
export interface SommerfreizeitSelect<T extends boolean = true> {
  title?: T;
  motto?: T;
  startDate?: T;
  endDate?: T;
  alter?: T;
  anmeldungWebsite?: T;
  allgemein?:
    | T
    | {
        pricing?:
          | T
          | {
              name?: T;
              beschreibung?: T;
              price?: T;
              eigenschaften?:
                | T
                | {
                    name?: T;
                    id?: T;
                  };
              id?: T;
            };
        eigenschaften?:
          | T
          | {
              title?: T;
              description?: T;
              id?: T;
            };
        teamFreizeit?: T;
      };
  unterkunft?:
    | T
    | {
        name?: T;
        beschreibung?: T;
        website?: T;
        bild?: T;
      };
  packliste?:
    | T
    | {
        text?: T;
      };
  informationen?:
    | T
    | {
        eintrag?:
          | T
          | {
              title?: T;
              text?: T;
              links?:
                | T
                | {
                    linkText?: T;
                    link?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tannenbaumaktion_select".
 */
export interface TannenbaumaktionSelect<T extends boolean = true> {
  startDate?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  vekaufsort?:
    | T
    | {
        name?: T;
        adresse?: T;
        id?: T;
      };
  fragen?:
    | T
    | {
        frage?: T;
        answer?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navigation?:
    | T
    | {
        title?: T;
        url?: T;
        subNavigation?:
          | T
          | {
              label?: T;
              title?: T;
              link?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  aktionen?:
    | T
    | {
        icon?: T;
        title?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  socialLinks?:
    | T
    | {
        title?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  legalLinks?:
    | T
    | {
        title?: T;
        url?: T;
        id?: T;
      };
  email?: T;
  phone?: T;
  whatsapp?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rechtliches_select".
 */
export interface RechtlichesSelect<T extends boolean = true> {
  impressum?:
    | T
    | {
        text?: T;
      };
  datenschutz?:
    | T
    | {
        allgemein?:
          | T
          | {
              text?: T;
            };
        sommerfreizeit?:
          | T
          | {
              text?: T;
            };
      };
  agb?:
    | T
    | {
        text?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knallbonbon_select".
 */
export interface KnallbonbonSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'blogPosts';
      value: string | BlogPost;
    } | null;
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}